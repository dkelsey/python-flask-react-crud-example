apiVersion: v1
kind: Template

labels:
  template: kudo-app

message: |-
  The following objects have been created in your project:

    Buildconfig:       ${KUDO_APP_BUILDCONFIG_NAME}
    ImageStream:       ${KUDO_APP_IMAGESTREAM_NAME}
    DeploymentConfig:  ${KUDO_APP_DEPLOYMENTCONFIG_NAME}
    Service:           ${KUDO_APP_SERVICE_NAME}
    Route:             ${KUDO_APP_HOSTNAME}${DOMAIN_SUFFIX}

metadata:
  annotations:
    description: |-
      Kudo-APP Template for use in OpenShift.
    iconClass: icon-other-unknown
    openshift.io/display-name: kudo-app
    openshift.io/documentation-url: https://github.com/dkelsey/python-flask-react-crud-example.git
    openshift.io/long-description: >-
      This template provides a parameterized BuildConfig for the kudo-app ImageStreams and other objects.

        * Kudo-app

    openshift.io/provider-display-name: Kudo-APP
    openshift.io/support-url: https://github.com/dkelsey/python-flask-react-crud-example.git
    tags: react, yarn, nodejs, oidc, keycloak
  name: kudo-app-template

parameters:
  - description: The DeploymentConfig name for the kudo-app.
    displayName: Kudo APP Deployment Config Name
    name: KUDO_APP_DEPLOYMENTCONFIG_NAME
    required: true
    value: kudo-app
  - description: The BuildConfig name for the kudo-app.
    displayName: Kudo APP Build Config Name
    name: KUDO_APP_BUILDCONFIG_NAME
    required: true
    value: kudo-app
  - description: The Github project URI for the kudo-app.
    displayName: Kudo APP Github Project URI
    name: KUDO_APP_GITHUB_URI
    required: true
    value: https://github.com/dkelsey/python-flask-react-crud-example.git
  - description: The Github project REF for the kudo-app.
    displayName: Kudo APP Github Project REF
    name: KUDO_APP_GITHUB_REF
    required: true
    value: dev
  - description: The Dockerfile  project contect dir for the kudo-app.
    displayName: Kudo APP Dockerfile Context Dir
    name: DOCKERFILE_CONTEXT_DIR
    required: true
    value: app/http/app
  - description: The imageStream name for the kudo-app.
    displayName: Kudo APP ImageStrean Name
    name: KUDO_APP_IMAGESTREAM_NAME
    required: true
    value: kudo-app
  - description: The imageStream tag to use for the kudo-app. e.g. latest
    displayName: Kudo APP ImageStrean Tag
    name: IMAGESTREAM_TAG
    required: true
    value: latest
  - description: The name of the Kudo-APP Service to be created
    displayName: Kudo APP Service Name
    name: KUDO_APP_SERVICE_NAME
    required: true
    value: kudo-app
  - description: The name of the Kudo-APP App to be created
    displayName: Kudo APP App Name
    name: KUDO_APP_APP_NAME
    required: true
    value: kudo-app
    
  - description: The hostname of the Kudo-API service the Kudo-App will call.
    displayName: Kudo API Host Name
    name: KUDO_API_HOSTNAME
    required: true
    value: http://kudo-api.pathfinder.gov.bc.ca
  - description: The name of the Kudo-APP route to be created
    displayName: Kudo APP Route Name
    name: KUDO_APP_ROUTE_NAME
    required: true
    value: kudo-app
  - description: The kudo app hostname to use for the route; eg kudo
    displayName: Kudo APP Hostname
    name: KUDO_APP_HOSTNAME
    required: true
    value: kudo
  - description: The domain suffix to use for the route; ie pathfinder.gov.bc.ca
    displayName: Domain Suffix
    name: DOMAIN_SUFFIX
    required: true
    value: pathfinder.gov.bc.ca
    #value: 192.168.64.4.nip.io
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    #value: openshift
    required: true

objects:
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: ${KUDO_APP_BUILDCONFIG_NAME}
    name: ${KUDO_APP_BUILDCONFIG_NAME}
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${KUDO_APP_IMAGESTREAM_NAME}:${IMAGESTREAM_TAG}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: ${DOCKERFILE_CONTEXT_DIR}
      git:
        uri: ${KUDO_APP_GITHUB_URI}
        ref: ${KUDO_APP_GITHUB_REF}
      type: Git
      #binary: {}
    strategy:
      dockerStrategy: {}
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: FpSluZFZBwCS1EcKeKCe
      type: GitHub
    - generic:
        secret: LeBZUEX6hHSM79Uxfj7I
      type: Generic
  status:
    lastVersion: 0
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 2
    labels:
      app: ${KUDO_APP_APP_NAME}
    name: ${KUDO_APP_DEPLOYMENTCONFIG_NAME}
    namespace: null
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${KUDO_APP_APP_NAME}
      deploymentconfig: ${KUDO_APP_DEPLOYMENTCONFIG_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: ${KUDO_APP_APP_NAME}
          deploymentconfig: ${KUDO_APP_DEPLOYMENTCONFIG_NAME}
      spec:
        containers:
        - env:
            - name: KUDO_API_HOST
              value: ${KUDO_API_HOSTNAME}
          image: docker-registry.default.svc:5000/${NAMESPACE}/${KUDO_APP_IMAGESTREAM_NAME}@sha256:1442db26550db90ea25c1ee7cb004a57b0a5364a7fa7ee50c686c2adc1151528
          imagePullPolicy: Always
          name: ${KUDO_APP_IMAGESTREAM_NAME}
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${KUDO_APP_IMAGESTREAM_NAME}
        from:
          kind: ImageStreamTag
          name: ${KUDO_APP_IMAGESTREAM_NAME}:${IMAGESTREAM_TAG}
          namespace: null
        lastTriggeredImage: docker-registry.default.svc:5000/${NAMESPACE}/${KUDO_APP_IMAGESTREAM_NAME}@sha256:1442db26550db90ea25c1ee7cb004a57b0a5364a7fa7ee50c686c2adc1151528
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${KUDO_APP_APP_NAME}
    name: ${KUDO_APP_SERVICE_NAME}
    namespace: null
  spec:
    clusterIP: null
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${KUDO_APP_APP_NAME}
      deploymentconfig: ${KUDO_APP_DEPLOYMENTCONFIG_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${KUDO_APP_APP_NAME}
    name: ${KUDO_APP_ROUTE_NAME}
    namespace: null
  spec:
    host: ${KUDO_APP_HOSTNAME}.${DOMAIN_SUFFIX}
    to:
      kind: Service
      name: ${KUDO_APP_SERVICE_NAME}
      weight: 100
    wildcardPolicy: None
